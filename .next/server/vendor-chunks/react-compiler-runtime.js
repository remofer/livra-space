/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-compiler-runtime";
exports.ids = ["vendor-chunks/react-compiler-runtime"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-compiler-runtime/dist/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-compiler-runtime/dist/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @lightSyntaxTransform\n * @noflow\n * @nolint\n * @preventMunge\n * @preserve-invariant-messages\n */\n\n\"use no memo\";'use strict';\n\nvar React = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n\nfunction _interopNamespaceDefault(e) {\n    var n = Object.create(null);\n    if (e) {\n        Object.keys(e).forEach(function (k) {\n            if (k !== 'default') {\n                var d = Object.getOwnPropertyDescriptor(e, k);\n                Object.defineProperty(n, k, d.get ? d : {\n                    enumerable: true,\n                    get: function () { return e[k]; }\n                });\n            }\n        });\n    }\n    n.default = e;\n    return Object.freeze(n);\n}\n\nvar React__namespace = /*#__PURE__*/_interopNamespaceDefault(React);\n\nvar _a, _b;\nconst { useRef, useEffect, isValidElement } = React__namespace;\nconst ReactSecretInternals = (_a = React__namespace.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE) !== null && _a !== void 0 ? _a : React__namespace.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\nconst $empty = Symbol.for('react.memo_cache_sentinel');\nconst c = typeof ((_b = React__namespace.__COMPILER_RUNTIME) === null || _b === void 0 ? void 0 : _b.c) === 'function'\n    ?\n        React__namespace.__COMPILER_RUNTIME.c\n    : function c(size) {\n        return React__namespace.useMemo(() => {\n            const $ = new Array(size);\n            for (let ii = 0; ii < size; ii++) {\n                $[ii] = $empty;\n            }\n            $[$empty] = true;\n            return $;\n        }, []);\n    };\nconst LazyGuardDispatcher = {};\n[\n    'readContext',\n    'useCallback',\n    'useContext',\n    'useEffect',\n    'useImperativeHandle',\n    'useInsertionEffect',\n    'useLayoutEffect',\n    'useMemo',\n    'useReducer',\n    'useRef',\n    'useState',\n    'useDebugValue',\n    'useDeferredValue',\n    'useTransition',\n    'useMutableSource',\n    'useSyncExternalStore',\n    'useId',\n    'unstable_isNewReconciler',\n    'getCacheSignal',\n    'getCacheForType',\n    'useCacheRefresh',\n].forEach(name => {\n    LazyGuardDispatcher[name] = () => {\n        throw new Error(`[React] Unexpected React hook call (${name}) from a React compiled function. ` +\n            \"Check that all hooks are called directly and named according to convention ('use[A-Z]') \");\n    };\n});\nlet originalDispatcher = null;\nLazyGuardDispatcher['useMemoCache'] = (count) => {\n    if (originalDispatcher == null) {\n        throw new Error('React Compiler internal invariant violation: unexpected null dispatcher');\n    }\n    else {\n        return originalDispatcher.useMemoCache(count);\n    }\n};\nvar GuardKind;\n(function (GuardKind) {\n    GuardKind[GuardKind[\"PushGuardContext\"] = 0] = \"PushGuardContext\";\n    GuardKind[GuardKind[\"PopGuardContext\"] = 1] = \"PopGuardContext\";\n    GuardKind[GuardKind[\"PushExpectHook\"] = 2] = \"PushExpectHook\";\n    GuardKind[GuardKind[\"PopExpectHook\"] = 3] = \"PopExpectHook\";\n})(GuardKind || (GuardKind = {}));\nfunction setCurrent(newDispatcher) {\n    ReactSecretInternals.ReactCurrentDispatcher.current = newDispatcher;\n    return ReactSecretInternals.ReactCurrentDispatcher.current;\n}\nconst guardFrames = [];\nfunction $dispatcherGuard(kind) {\n    const curr = ReactSecretInternals.ReactCurrentDispatcher.current;\n    if (kind === GuardKind.PushGuardContext) {\n        guardFrames.push(curr);\n        if (guardFrames.length === 1) {\n            originalDispatcher = curr;\n        }\n        if (curr === LazyGuardDispatcher) {\n            throw new Error(`[React] Unexpected call to custom hook or component from a React compiled function. ` +\n                \"Check that (1) all hooks are called directly and named according to convention ('use[A-Z]') \" +\n                'and (2) components are returned as JSX instead of being directly invoked.');\n        }\n        setCurrent(LazyGuardDispatcher);\n    }\n    else if (kind === GuardKind.PopGuardContext) {\n        const lastFrame = guardFrames.pop();\n        if (lastFrame == null) {\n            throw new Error('React Compiler internal error: unexpected null in guard stack');\n        }\n        if (guardFrames.length === 0) {\n            originalDispatcher = null;\n        }\n        setCurrent(lastFrame);\n    }\n    else if (kind === GuardKind.PushExpectHook) {\n        guardFrames.push(curr);\n        setCurrent(originalDispatcher);\n    }\n    else if (kind === GuardKind.PopExpectHook) {\n        const lastFrame = guardFrames.pop();\n        if (lastFrame == null) {\n            throw new Error('React Compiler internal error: unexpected null in guard stack');\n        }\n        setCurrent(lastFrame);\n    }\n    else {\n        throw new Error('React Compiler internal error: unreachable block' + kind);\n    }\n}\nfunction $reset($) {\n    for (let ii = 0; ii < $.length; ii++) {\n        $[ii] = $empty;\n    }\n}\nfunction $makeReadOnly() {\n    throw new Error('TODO: implement $makeReadOnly in react-compiler-runtime');\n}\nconst renderCounterRegistry = new Map();\nfunction clearRenderCounterRegistry() {\n    for (const counters of renderCounterRegistry.values()) {\n        counters.forEach(counter => {\n            counter.count = 0;\n        });\n    }\n}\nfunction registerRenderCounter(name, val) {\n    let counters = renderCounterRegistry.get(name);\n    if (counters == null) {\n        counters = new Set();\n        renderCounterRegistry.set(name, counters);\n    }\n    counters.add(val);\n}\nfunction removeRenderCounter(name, val) {\n    const counters = renderCounterRegistry.get(name);\n    if (counters == null) {\n        return;\n    }\n    counters.delete(val);\n}\nfunction useRenderCounter(name) {\n    const val = useRef(null);\n    if (val.current != null) {\n        val.current.count += 1;\n    }\n    useEffect(() => {\n        if (val.current == null) {\n            const counter = { count: 0 };\n            registerRenderCounter(name, counter);\n            val.current = counter;\n        }\n        return () => {\n            if (val.current !== null) {\n                removeRenderCounter(name, val.current);\n            }\n        };\n    });\n}\nconst seenErrors = new Set();\nfunction $structuralCheck(oldValue, newValue, variableName, fnName, kind, loc) {\n    function error(l, r, path, depth) {\n        const str = `${fnName}:${loc} [${kind}] ${variableName}${path} changed from ${l} to ${r} at depth ${depth}`;\n        if (seenErrors.has(str)) {\n            return;\n        }\n        seenErrors.add(str);\n        console.error(str);\n    }\n    const depthLimit = 2;\n    function recur(oldValue, newValue, path, depth) {\n        if (depth > depthLimit) {\n            return;\n        }\n        else if (oldValue === newValue) {\n            return;\n        }\n        else if (typeof oldValue !== typeof newValue) {\n            error(`type ${typeof oldValue}`, `type ${typeof newValue}`, path, depth);\n        }\n        else if (typeof oldValue === 'object') {\n            const oldArray = Array.isArray(oldValue);\n            const newArray = Array.isArray(newValue);\n            if (oldValue === null && newValue !== null) {\n                error('null', `type ${typeof newValue}`, path, depth);\n            }\n            else if (newValue === null) {\n                error(`type ${typeof oldValue}`, 'null', path, depth);\n            }\n            else if (oldValue instanceof Map) {\n                if (!(newValue instanceof Map)) {\n                    error(`Map instance`, `other value`, path, depth);\n                }\n                else if (oldValue.size !== newValue.size) {\n                    error(`Map instance with size ${oldValue.size}`, `Map instance with size ${newValue.size}`, path, depth);\n                }\n                else {\n                    for (const [k, v] of oldValue) {\n                        if (!newValue.has(k)) {\n                            error(`Map instance with key ${k}`, `Map instance without key ${k}`, path, depth);\n                        }\n                        else {\n                            recur(v, newValue.get(k), `${path}.get(${k})`, depth + 1);\n                        }\n                    }\n                }\n            }\n            else if (newValue instanceof Map) {\n                error('other value', `Map instance`, path, depth);\n            }\n            else if (oldValue instanceof Set) {\n                if (!(newValue instanceof Set)) {\n                    error(`Set instance`, `other value`, path, depth);\n                }\n                else if (oldValue.size !== newValue.size) {\n                    error(`Set instance with size ${oldValue.size}`, `Set instance with size ${newValue.size}`, path, depth);\n                }\n                else {\n                    for (const v of newValue) {\n                        if (!oldValue.has(v)) {\n                            error(`Set instance without element ${v}`, `Set instance with element ${v}`, path, depth);\n                        }\n                    }\n                }\n            }\n            else if (newValue instanceof Set) {\n                error('other value', `Set instance`, path, depth);\n            }\n            else if (oldArray || newArray) {\n                if (oldArray !== newArray) {\n                    error(`type ${oldArray ? 'array' : 'object'}`, `type ${newArray ? 'array' : 'object'}`, path, depth);\n                }\n                else if (oldValue.length !== newValue.length) {\n                    error(`array with length ${oldValue.length}`, `array with length ${newValue.length}`, path, depth);\n                }\n                else {\n                    for (let ii = 0; ii < oldValue.length; ii++) {\n                        recur(oldValue[ii], newValue[ii], `${path}[${ii}]`, depth + 1);\n                    }\n                }\n            }\n            else if (isValidElement(oldValue) || isValidElement(newValue)) {\n                if (isValidElement(oldValue) !== isValidElement(newValue)) {\n                    error(`type ${isValidElement(oldValue) ? 'React element' : 'object'}`, `type ${isValidElement(newValue) ? 'React element' : 'object'}`, path, depth);\n                }\n                else if (oldValue.type !== newValue.type) {\n                    error(`React element of type ${oldValue.type}`, `React element of type ${newValue.type}`, path, depth);\n                }\n                else {\n                    recur(oldValue.props, newValue.props, `[props of ${path}]`, depth + 1);\n                }\n            }\n            else {\n                for (const key in newValue) {\n                    if (!(key in oldValue)) {\n                        error(`object without key ${key}`, `object with key ${key}`, path, depth);\n                    }\n                }\n                for (const key in oldValue) {\n                    if (!(key in newValue)) {\n                        error(`object with key ${key}`, `object without key ${key}`, path, depth);\n                    }\n                    else {\n                        recur(oldValue[key], newValue[key], `${path}.${key}`, depth + 1);\n                    }\n                }\n            }\n        }\n        else if (typeof oldValue === 'function') {\n            return;\n        }\n        else if (isNaN(oldValue) || isNaN(newValue)) {\n            if (isNaN(oldValue) !== isNaN(newValue)) {\n                error(`${isNaN(oldValue) ? 'NaN' : 'non-NaN value'}`, `${isNaN(newValue) ? 'NaN' : 'non-NaN value'}`, path, depth);\n            }\n        }\n        else if (oldValue !== newValue) {\n            error(oldValue, newValue, path, depth);\n        }\n    }\n    recur(oldValue, newValue, '', 0);\n}\n\nexports.$dispatcherGuard = $dispatcherGuard;\nexports.$makeReadOnly = $makeReadOnly;\nexports.$reset = $reset;\nexports.$structuralCheck = $structuralCheck;\nexports.c = c;\nexports.clearRenderCounterRegistry = clearRenderCounterRegistry;\nexports.renderCounterRegistry = renderCounterRegistry;\nexports.useRenderCounter = useRenderCounter;\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-compiler-runtime/dist/index.js\n");

/***/ })

};
;